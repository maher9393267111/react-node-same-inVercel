{"version":3,"sources":["logo.svg","utils/mutations.js","utils/auth.js","pages/signup.js","App.js","index.js"],"names":["ADD_USER","gql","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","useState","username","email","password","formState","setFormState","useMutation","addUser","error","data","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","console","log","variables","Auth","login","className","to","onSubmit","placeholder","type","onChange","style","cursor","message","App","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","createRoot","document","getElementById","render","StrictMode","ApolloProvider"],"mappings":"yLAAe,I,6ECcFA,GAZaC,YAAH,qNAYAA,YAAF,6P,GAcGA,YAAH,4bAgBMA,YAAH,gP,uBCPT,M,0FAlCb,WACE,OAAOC,YAAOC,KAAKC,c,sBAGrB,WACE,IAAMC,EAAQF,KAAKC,WACnB,SAAOC,GAAUF,KAAKG,eAAeD,M,4BAGvC,SAAeA,GAEb,OADgBH,YAAOG,GACXE,IAAMC,KAAKC,MAAM,MAC3BC,aAAaC,WAAW,aACjB,K,sBAKX,WACE,OAAOD,aAAaE,QAAQ,c,mBAI9B,SAAMC,GACJH,aAAaI,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,Y,oBAGzB,WACEP,aAAaC,WAAW,YACxBI,OAAOC,SAASE,a,aCmELC,EA5FA,WACb,MAAkCC,mBAAS,CACzCC,SAAU,GACVC,MAAO,GACPC,SAAU,KAHZ,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAAmCC,YAAY1B,GAA/C,mBAAO2B,EAAP,YAAkBC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,KAEnBC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdT,EAAa,2BACRD,GADO,kBAETS,EAAOC,MAINC,EAAgB,uCAAG,WAAOJ,GAAP,iBAAAK,EAAA,6DACvBL,EAAMM,iBACNC,QAAQC,IAAIf,GAFW,kBAKEG,EAAQ,CAC7Ba,UAAU,eAAMhB,KANG,gBAKbK,EALa,EAKbA,KAGRS,QAAQC,IAAIV,GAEZY,EAAKC,MAAMb,EAAKF,QAAQtB,OAVH,kDAYrBiC,QAAQV,MAAR,MAZqB,0DAAH,sDAgBtB,OACE,sBAAMe,UAAU,+BAAhB,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,qCAAd,qBACA,sBAAKA,UAAU,YAAf,UACGd,EACC,0DAC4B,IAC1B,cAAC,IAAD,CAAMe,GAAG,SAAT,4CAGF,uBAAMC,SAAUV,EAAhB,UACE,uBACEQ,UAAU,aACVG,YAAY,gBACZb,KAAK,WACLc,KAAK,OACLb,MAAOV,EAAUS,KACjBe,SAAUlB,IAEZ,uBACEa,UAAU,aACVG,YAAY,aACZb,KAAK,QACLc,KAAK,QACLb,MAAOV,EAAUF,MACjB0B,SAAUlB,IAEZ,uBACEa,UAAU,aACVG,YAAY,SACZb,KAAK,WACLc,KAAK,WACLb,MAAOV,EAAUD,SACjByB,SAAUlB,IAEZ,wBACEa,UAAU,4BACVM,MAAO,CAAEC,OAAQ,WACjBH,KAAK,SAHP,uBAUHnB,GACC,qBAAKe,UAAU,gCAAf,SACGf,EAAMuB,qBC9ERC,MATf,WACE,OACE,gCACE,4EACA,cAAC,EAAD,Q,wCCIAC,EAAWC,YAAe,CAC9BC,IAAK,aAMDC,EAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAE1BtD,EAAQK,aAAaE,QAAQ,YAEnC,MAAO,CACL+C,QAAQ,2BACHA,GADE,IAELC,cAAevD,EAAK,iBAAaA,GAAU,SAM3CwD,EAAS,IAAIC,IAAa,CAE9BC,KAAMP,EAASQ,OAAOX,GACtBY,MAAO,IAAIC,MAKAC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACA,cAACC,EAAA,EAAD,CAAgBZ,OAAQA,EAAxB,SACA,cAAC,EAAD,W","file":"static/js/main.25c829f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER =gql`\r\nmutation addUser($username: String!, $email: String!, $password: String!) {\r\n  addUser(username: $username, email: $email, password: $password) {\r\n    token\r\n    user {\r\n      _id\r\n      username\r\n        \r\n  \r\n    }\r\n  }\r\n}`\r\n\r\n\r\nexport const ADD_FOOD = gql`\r\n\r\n  mutation addFood($name: String!, $description: String!, $expiry: String, $imageUrl: String, $servings: String, $ingredients: String,) {\r\n    addFood(name: $name, description: $description, expiry: $expiry, imageUrl: $imageUrl, servings: $servings, ingredients: $ingredients) {\r\n      _id\r\n      name\r\n      donatedBy\r\n      description\r\n      servings\r\n      ingredients\r\n      imageUrl\r\n      expiry\r\n    }\r\n  }`\r\n\r\n\r\nexport const REMOVE_FOOD = gql`\r\n  mutation removeFood($foodId: ID!) {\r\n    removeFood(foodId: $foodId) {\r\n      _id\r\n      name\r\n      donatedBy\r\n      description\r\n      servings\r\n      imageUrl\r\n      ingredients\r\n      expiry\r\n    }\r\n  }\r\n  `;\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    const decoded = decode(token);\r\n    if (decoded.exp < Date.now()/1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n    \r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/Foods');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '..//utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n      console.log(data)\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/foods\">back to the Food Available.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Signup from './pages/signup';\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>hello Vercel my name is maher 28 years old</h1>\r\n      <Signup />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\n\r\nimport App from './App';\r\n\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\r\nimport { createHttpLink } from '@apollo/client'\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n\r\n});\r\n\r\n\r\n//Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\n\r\nconst client = new ApolloClient({\r\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n  <ApolloProvider client={client} >\r\n  <App />\r\n\r\n  </ApolloProvider>\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}